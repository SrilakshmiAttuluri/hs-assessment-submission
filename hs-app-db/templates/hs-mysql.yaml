apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-mysql
  labels:
    app: {{ .Release.Name }}-mysql
spec:
  clusterIP: None
  selector:
    app: {{ .Release.Name }}-mysql
  ports:
    - name: tcp
      protocol: TCP
      port: {{ .Values.mysql.port}}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-mysql
spec:
  replicas: {{ .Values.mysql.replicaCount }}
  serviceName: {{ .Release.Name }}-mysql
  selector:
    matchLabels:
      app: {{ .Release.Name }}-mysql
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-mysql
    spec:
      volumes:
        - name: {{ .Values.mysql.volume.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.mysql.volume.pvc.name }}
      containers:
        - name: {{ .Release.Name }}-mysql
          image: "{{ .Values.mysql.docker_image_repository }}:{{ .Values.mysql.docker_image_tag }}"
          ports:
            - name: tpc
              protocol: TCP
              containerPort: {{ .Values.mysql.port}}
          {{- if or .Values.secret_env .Values.env }} 
          envFrom:
          {{- if .Values.secret_env }} 
          - secretRef:
              name: {{ .Release.Name }}-mysql
          {{- end }}
          {{- if  .Values.env }} 
          - configMapRef:
               name: {{ .Release.Name }}-mysql    
          {{- end }} 
          {{- end }}
          volumeMounts:
            - name:  {{ .Values.mysql.volume.name }}
              mountPath: {{ .Values.mysql.volume.mountPath }} 